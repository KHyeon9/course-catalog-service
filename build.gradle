plugins {
	id 'org.jetbrains.kotlin.jvm' version '1.9.25'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.25'
}

group = 'com.kotlinspring'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// kotlin
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'

	// logging
	implementation "io.github.microutils:kotlin-logging:3.0.5"

	// db
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
	testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// mock 관련
	testImplementation 'io.mockk:mockk:1.13.17'
	testImplementation 'com.ninja-squad:springmockk:4.0.2'
}

kotlin {
	compilerOptions {
		freeCompilerArgs.addAll '-Xjsr305=strict'
	}
}

allOpen {
	annotation 'jakarta.persistence.Entity'
	annotation 'jakarta.persistence.MappedSuperclass'
	annotation 'jakarta.persistence.Embeddable'
}

tasks.named('test') {
	useJUnitPlatform()
}

sourceSets {
	test {
		java.setSrcDirs(["src/test/intg", "src/test/unit"])
	}
}
